scp_program -> proc_of_transition_to_next_operator (*
    -> rrel_params: ... (*
        -> rrel_1: rrel_in: _operator;;
        -> rrel_2: rrel_out: _answer;;
    *);;
    -> rrel_operators: ... (*
        ->rrel_init: ..operator0 (*
            <- call;;
            -> rrel_1: rrel_fixed: rrel_scp_const: proc_of_find_all_transitions_for_operator;;
            -> rrel_2: ... (*
                -> rrel_1: rrel_fixed: rrel_scp_var: _operator;;
                -> rrel_2: rrel_scp_var: rrel_assign: _next_operators;;
            *);;
            -> rrel_3: rrel_assign: rrel_scp_var: _argument0;;
            => nrel_goto: ..operator1;;
        *);;
        ->..operator1 (*
            <- waitReturn;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _argument0;;
            => nrel_goto: ..operator2;;
        *);;
        ->..operator2 (*
            <- searchElStr3;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _next_operators;;
            -> rrel_2: rrel_scp_var: rrel_assign: rrel_pos_const_perm: _arc;;
            -> rrel_3: rrel_scp_var: rrel_assign: _next_operator;;
            => nrel_then: ..operator3;;
            => nrel_else: ..operator6;;
        *);;
        ->..operator3 (*
            <- call;;
            -> rrel_1: rrel_fixed: rrel_scp_const: proc_of_adding_breakpoint_in_process;;
            -> rrel_2: ... (*
                -> rrel_1: rrel_fixed: rrel_scp_var: _next_operator;;
            *);;
            -> rrel_3: rrel_assign: rrel_scp_var: _argument1;;
            => nrel_goto: ..operator4;;
        *);;
        ->..operator4 (*
            <- waitReturn;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _argument1;;
            => nrel_goto: ..operator5;;
        *);;
        ->..operator5 (*
            <- eraseEl;;
            -> rrel_1: rrel_fixed: rrel_scp_var: rrel_erase: _arc;;
            => nrel_goto: ..operator2;;
        *);;
        ->..operator6 (*
            <- call;;
            -> rrel_1: rrel_fixed: rrel_scp_const: proc_of_unpausing_paused_operator;;
            -> rrel_2: ... (*
                -> rrel_1: rrel_fixed: rrel_scp_var: _operator;;
                -> rrel_2: rrel_scp_var: rrel_assign: _answer;;
            *);;
            -> rrel_3: rrel_assign: rrel_scp_var: _argument2;;
            => nrel_goto: ..operator7;;
        *);;
        ->..operator7 (*
            <- waitReturn;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _argument2;;
            => nrel_goto: ..operator8;;
        *);;
        ->..operator8 (*
            <- call;;
            -> rrel_1: rrel_fixed: rrel_scp_const: proc_of_removing_breakpoint_in_process;;
            -> rrel_2: ... (*
                -> rrel_1: rrel_fixed: rrel_scp_var: _operator;;
            *);;
            -> rrel_3: rrel_assign: rrel_scp_var: _argument3;;
            => nrel_goto: ..operator9;;
        *);;
        ->..operator9 (*
            <- waitReturn;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _argument3;;
            => nrel_goto: ..operator10;;
        *);;
        ->..operator10 (*
            <- return;;
        *);;
    *);;
*);;